la versione async_mqtt
ChatGPT said:

Certamente! Ecco un esempio di codice asincrono per un client MQTT in C++ utilizzando la libreria Async.MQTT5, che si basa su Boost.Asio e supporta MQTT 5.0. Questo esempio mostra come configurare un client MQTT asincrono per pubblicare un messaggio su un broker.
🧩 Esempio di codice asincrono con Async.MQTT5

#include <iostream>
#include <boost/asio/io_context.hpp>
#include <boost/asio/detached.hpp>
#include <boost/asio/ip/tcp.hpp>
#include <async_mqtt5/mqtt_client.hpp>
#include <async_mqtt5/types.hpp>

int main() {
    boost::asio::io_context ioc;

    async_mqtt5::mqtt_client<boost::asio::ip::tcp::socket> client(ioc);

    client.brokers("localhost", 1883)
          .credentials("client_id", "username", "password")
          .async_run(boost::asio::detached);

    client.async_publish<async_mqtt5::qos_e::at_most_once>(
        "test/topic", "Hello, MQTT!",
        async_mqtt5::retain_e::no, async_mqtt5::publish_props {},
        [&client](async_mqtt5::error_code ec) {
            std::cout << "Publish result: " << ec.message() << std::endl;
            client.async_disconnect(boost::asio::detached);
        });

    ioc.run();
}

🔍 Spiegazione del codice

    Boost.Asio: Gestisce l'I/O asincrono.

    async_mqtt5::mqtt_client: Classe del client MQTT asincrono.

    async_publish: Metodo per pubblicare un messaggio in modo asincrono.

    async_disconnect: Metodo per disconnettersi in modo asincrono.

    boost::asio::detached: Indica che non è necessario gestire il risultato dell'operazione.

✅ Requisiti

    C++17 o superiore.

    Boost 1.82 o superiore.

    OpenSSL (se si utilizza SSL/TLS).

📦 Compilazione con CMake

    Scarica le dipendenze:

        Boost: https://www.boost.org/

        OpenSSL: https://www.openssl.org/

        Async.MQTT5: https://github.com/mireo/async-mqtt5

    Crea un file CMakeLists.txt:

cmake_minimum_required(VERSION 3.10)
project(MQTTClient)

set(CMAKE_CXX_STANDARD 17)

find_package(Boost 1.82 REQUIRED COMPONENTS system)
find_package(OpenSSL REQUIRED)

include_directories(path/to/async-mqtt5/include)

add_executable(mqtt_client main.cpp)

target_link_libraries(mqtt_client Boost::Boost OpenSSL::SSL OpenSSL::Crypto)

    Compila il progetto:

mkdir build
cd build
cmake ..
make

📘 Documentazione e risorse

    Async.MQTT5 GitHub: https://github.com/mireo/async-mqtt5

    Boost.MQTT5 GitHub: https://github.com/boostorg/mqtt5

    Async.MQTT5 Documentation: https://spacetime.mireo.com/async-mqtt5/async_mqtt5/intro.html